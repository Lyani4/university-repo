#include <cstdio>
#include <iostream>

int main() {
  std::printf("Пример работы с указателем\n");
  std::printf("----------------------------------------\n");

  // ключевое слово new используется для динамического выделения памяти
  // После использования new для выделения памяти, вы должны не забыть
  // освободить эту память с помощью ключевого слова delete

  // Объявляем указатель ptr и присваиваем ему значение 10
  int *ptr = new int(10);

  std::printf("Значение по указателю: %d\n", *ptr);
  std::printf("Адресс памяти где храниться int (10): %p\n", (void *)ptr);
  std::printf("Адресс памяти самого указателя: %p\n", (void *)&ptr);
  // zu - это сокращение zero-unsigned то есть целое число без знака
  // конкретно тут тип size_t
  std::printf("Размер памяти указателя в байтах: %zu\n", sizeof(ptr));

  // Освобождаем память, выделенную при помощи new
  delete ptr;

  std::printf("\n");
  std::printf("Пример кода без указателя и работа с памятью\n");
  std::printf("----------------------------------------\n");

  int x = 10;
  std::printf("Объем памяти x: %zu байт\n", sizeof(x));

  long long y = x;
  std::printf("Объем памяти y: %zu байт\n", sizeof(y));

  return 0;
}